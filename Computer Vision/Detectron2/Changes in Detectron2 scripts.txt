**CHANGES IN DETECTRON2 SCRIPTS**

# In our case, some parts of specific used functions in Detectron2 were modified in order to avoid recurrent errors while processing:

	Those modifications are:


	-In "visualizer.py" function (.../detectron2/utils/), line 490, we need to align our custom dataset categories indexes for visualization:

		text = self.metadata.stuff_classes[category_idx] --> (changed for) --> real_id=category_idx - 3  ## added (-3 because there are 3 stuff categories in the dataset with a reasigned contiguous id (just for visualization) and we want to access their real original ids as described in the dataset metadata)
            									       text = self.metadata.stuff_classes[real_id] ## added

 
	-In "functional.py" function (.../anaconda3/envs/detectron2_env/Lib/site-packages/torch/nn/), line 2846, target dtype changed in function call torch._C.nn.cross_entropy_loss():
		
		target --> (changed for) --> target.type(torch.long)

    	 	Because of error: "Expected type scalar long but got int". 



	-In "prepare_panoptic_fpn.py" function (.../detectron2/datasets/):

		Function "_process_panoptic_to_semantic.py" was separated in other file ("process_panoptic_to_semantic.py" in Dataset preparation folder) and modified:

			Instead of PIL Image library, we used Opencv to load and save the images.	



		Function "separate_coco_semantic_from_panoptic.py" was renamed ("separate_semantic_from_panoptic.py") and modified too:

			As there is no category_id==0 in the dataset, we commented id_map[thing_id]=0 in line 53. Further explanation available inside the function script.

		 
		